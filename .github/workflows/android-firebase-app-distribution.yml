# name: Build & upload to Firebase App Distribution

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-java@v2
#         with:
#           distribution: "zulu"
#           java-version: "11"
#       - name: Decode google-services.json
#         env: 
#             GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
#         run: echo "$GOOGLE_SERVICES_JSON" > android/app/google-services.json
#       - name: Decode firebase_option
#         env:
#           firebase_options_dart: ${{secrets.FIREBASE_OPTION}}
#         run : echo "$firebase_options_dart" > lib/firebase_options.dart

#       - uses: subosito/flutter-action@v2
#         with:
#           channel: "stable"
#       - run: flutter pub get
#       - run: flutter build apk
#       - uses: actions/upload-artifact@v1
#         with:
#           name: release-apk
#           path: build/app/outputs/apk/release/app-release.apk
#       - name: upload artifact to Firebase App Distribution
#         uses: wzieba/Firebase-Distribution-Github-Action@v1
#         with:
#             appId: ${{secrets.APPID}}
#             token: ${{secrets.TOKEN}}
#             groups: tester
#             file: build/app/outputs/apk/release/app-release.apk


name: Android Build & Upload to Firebase App Distribution

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest  # Specify to use only Ubuntu
    timeout-minutes: 30

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: ☕ Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17.0.10"
          
      - name: 🧑‍💻 Check Java version
        run: java --version

      - name: 📂 Print Current Directory
        run: pwd
        
      - name: 🔑 Decode google-services.json
        env: 
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo "$GOOGLE_SERVICES_JSON" > android/app/google-services.json
        continue-on-error: true

      - name: 🔑 Decode Firebase options
        env:
          firebase_options_dart: ${{ secrets.FIREBASE_OPTION }}
        run: echo "$firebase_options_dart" > lib/firebase_options.dart
        continue-on-error: true

      - name: 🦄 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: 3.24.1
        continue-on-error: true

      - name: 📋 Check Flutter Version
        run: flutter --version
        continue-on-error: true

      - name: 🧹 Clean Flutter Build Artifacts
        run: flutter clean
        continue-on-error: true

      - name: 🗑️ Clean Flutter Pub Cache
        run: flutter pub cache clean --force
        continue-on-error: true
      
      - name: 🛠️ Repair Flutter Pub Cache
        run: flutter pub cache repair
        continue-on-error: true
      
      - name: 📦 Get Flutter dependencies
        run: flutter pub get
        continue-on-error: true

      - name: 📱 Build APK
        run: flutter build apk
        continue-on-error: true

      - name: 📦 Build Android App Bundle (Verbose)
        run: flutter build appbundle --verbose
        continue-on-error: true

      - name: 📤 Upload APK artifact
        uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
        continue-on-error: true

      - name: 🚀 Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.APPID }}
          token: ${{ secrets.TOKEN }}
          groups: tester
          file: build/app/outputs/apk/release/app-release.apk
        continue-on-error: true
